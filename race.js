// Generated by CoffeeScript 1.10.0
var Character, Game,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Game = (function() {
  Game.car;

  Game.$gameBox;

  function Game() {
    this.$gameBox = $('#gameBox');
    this.car = new Character(this.$gameBox, this);
  }

  Game.prototype.$ = function(s) {
    return this.$gameBox.find(s);
  };

  return Game;

})();

Character = (function() {
  Character.prototype.CIRCLE = 'circle';

  Character.prototype.TRIANGLE = 'triangle';

  Character.prototype.SQUARE = 'square';

  Character.prototype.TYPES = [Character.CIRCLE, Character.TRIANGLE, Character.SQUARE];

  Character.prototype.POS = [150, 300, 450];

  Character.prototype.myWidth = 30;

  Character.prototype.myHeight = 30;

  Character.prototype.myTop = 400;

  Character.myPos;

  Character.$me;

  Character.type;

  Character.myType;

  function Character($gameBox, parent) {
    this.$gameBox = $gameBox;
    this.parent = parent;
    this.checkKey = bind(this.checkKey, this);
    this.setLoc = bind(this.setLoc, this);
    this.$me = $('.character');
    this.TYPES = [this.CIRCLE, this.TRIANGLE, this.SQUARE];
    this.initChar();
    this.initKeys();
  }

  Character.prototype.initChar = function() {
    this.setType(2);
    return this.setLoc(0);
  };

  Character.prototype.initKeys = function() {
    return $(document).keyup(this.checkKey);
  };

  Character.prototype.setLoc = function(l) {
    if (!((0 <= l && l <= 2))) {
      return;
    }
    this.myPos = l;
    return this.$me.offset({
      left: this.POS[l],
      top: this.myTop
    });
  };

  Character.prototype.setType = function(t) {
    var s;
    console.log(t);
    s = t;
    if (s > 2) {
      s = 0;
    }
    if (s < 0) {
      s = 2;
    }
    console.log(s);
    this.myType = s;
    this.type = this.TYPES[s];
    console.log(this.type);
    this.$me.removeClass(this.CIRCLE);
    this.$me.removeClass(this.SQUARE);
    this.$me.removeClass(this.TRIANGLE);
    return this.$me.addClass(this.type);
  };

  Character.prototype.checkKey = function(e) {
    var key;
    key = e.which;
    switch (key) {
      case 37:
        this.setLoc(this.myPos - 1);
        break;
      case 38:
        this.setType(this.myType + 1);
        break;
      case 39:
        this.setLoc(this.myPos + 1);
        break;
      case 40:
        this.setType(this.myType - 1);
    }
    if ((37 <= e && e <= 40)) {
      return e.preventDefault();
    }
  };

  return Character;

})();

$(document).ready(function() {
  return window.game = new Game();
});
